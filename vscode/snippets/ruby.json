{
	// Logger
	"Rails logger.debug": {
		"prefix": "logd",
		"body": "Rails.logger.debug {\"${1:message}\"}",
		"description": "Rails logger debug",
		"scope": "source.ruby"
	},
	"Rails logger.info": {
		"prefix": "logi",
		"body": "Rails.logger.info {\"${1:message}\"}",
		"description": "Rails logger info",
		"scope": "source.ruby"
	},
	"Rails logger.error": {
		"prefix": "loge",
		"body": "Rails.logger.error {\"${1:message}\"}",
		"description": "Rails logger error",
		"scope": "source.ruby"
	},
	"Puts": {
		"prefix": "puts*",
		"body": "puts \"****************************************\"",
		"description": "Puts",
		"scope": "source.ruby, source.ruby.rails, meta.rails.controller"
	},

	// Model
	"enum": {
		"prefix": "enum",
		"body": "enum ${1:status}: [${2:active}]$0",
		"scope": "source.ruby, source.ruby.rails, meta.rails.controller, meta.rails.model"
	},
	"scope": {
		"prefix": "scope",
		"body": "scope :${1:scope_name}, -> { ${2:where(${3:${4:field}: ${5:true}})} $0}",
		"scope": "source.ruby, source.ruby.rails, meta.rails.controller, meta.rails.model"
	},
	"scope_params": {
		"prefix": "scopep",
		"body": "scope :${1:scope_name}, -> (${2:param}) do\n\twhere(${3:attribute}: ${2:param})\nend",
		"scope": "source.ruby, source.ruby.rails, meta.rails.controller, meta.rails.model"
	},
	"scope_lambda": {
		"prefix": "scopel",
		"body": "scope :${1:scope_name}, -> do\n\twhere(${2:'${3:created_at} ${4:>=} ?',} ${5:Time.now - 1.week})\nend$6",
		"scope": "source.ruby, source.ruby.rails, meta.rails.controller, meta.rails.model"
	},
	"scope_between_dates": {
		"prefix": "scopebd",
		"body": "scope :${1:scope_name}, -> do\n\twhere(\"${2:attribute} BETWEEN ? AND ?\",${3:Time.now.at_beginning_of_day},${4:Time.now.at_end_of_day})\nend$0",
		"scope": "source.ruby, source.ruby.rails, meta.rails.controller, meta.rails.model"
	},
	"find": {
		"prefix": ".f",
		"body": "..find(${2:params[:${1:id}]})$0",
		"scope": "source.ruby, source.ruby.rails, meta.rails.controller, meta.rails.model"
	},
	"find_by_attribute": {
		"prefix": ".fb",
		"body": ".find_by_${1:name}(${3:params[:${2:${1:name}}]})$0",
		"scope": "source.ruby, source.ruby.rails, meta.rails.controller, meta.rails.model"
	},
	"where query": {
		"prefix": ".we",
		"body": ".where(${1:attribute}: ${2:expected})$0",
		"scope": "source.ruby, source.ruby.rails, meta.rails.controller, meta.rails.model"
	},
	"where string": {
		"prefix": ".wheres",
		"body": "where(\"${1:attribute} LIKE ?\", \"%#{${2:expected}}%\")$0",
		"scope": "source.ruby, source.ruby.rails, meta.rails.controller, meta.rails.model"
	},
	"update_attribute": {
		"prefix": ".ua",
		"body": ".update_attribute :${1:attribute}, \"${2:new value}\"",
		"scope": "source.ruby, source.ruby.rails, meta.rails.controller, meta.rails.model"
	},
	"update_attributes": {
		"prefix": ".uas",
		"body": ".update_attributes(\n\t${1:attribute}, \"${2:value}\"\n\t${3:attribute_2}, \"${4:value_2}\"\n)",
		"scope": "source.ruby, source.ruby.rails, meta.rails.controller, meta.rails.model"
	},
	"change_column_null": {
		"prefix": "change_column_null",
		"body": "change_column_null :${1:table}, :${2:column}, ${3:true_false}, \"${4:default_value\"}",
		"scope": "source.ruby, source.ruby.rails, meta.rails.controller, meta.rails.model"
	},
	
}